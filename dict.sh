#!/usr/bin/env bash

# Copyright 2014 Vassil Panayotov
# 2022 Ankit Grover @agrover112
# Apache 2.0

# Prepares the dictionary and auto-generates the pronunciations for the words,
# given a vocab file.

stage=1 #Default stage is 1 skip download CMUdict
nj=4 # number of parallel Sequitur G2P jobs, we would like to use
cmd=run.pl #For single machine


. utils/parse_options.sh || exit 1;
. ./path.sh || exit 1


if [ $# -ne 4 ]; then
  echo "Usage: $0 [options] <lm-dir> <g2p-model-dir> <dst-dir>"
  echo "e.g.: /export/a15/vpanayotov/data/lm /export/a15/vpanayotov/data/g2p data/local/dict"
  echo "Options:"
  echo "  --cmd '<command>'    # script to launch jobs with, default: run.pl"
  echo "  --nj <nj>            # number of jobs to run, default: 4."
  echo "  --vocab <vocab>      # The vocab file we want to use"
  exit 1
fi


lm_dir=$1
g2p_model_dir=$2
dst_dir=$3
vocab=$4
#vocab=$lm_dir/librispeech-vocab.txt


[ ! -f $vocab ] && echo "$0: vocabulary file not found at $vocab" && exit 1;

# this file is either a copy of the lexicon we download from openslr.org/11 or is
# created by the G2P steps below
lexicon_raw_nosil_our=$dst_dir/lexicon_raw_nosil_our.txt

cmudict_dir=$dst_dir/cmudict
cmudict_plain=$dst_dir/cmudict.0.7a.plain

mkdir -p $dst_dir || exit 1;

if [ $stage -le 0 ]; then
  echo "Downloading and preparing CMUdict"
  if [ ! -s $cmudict_dir/cmudict.0.7a ]; then
    svn co -r 12440 https://svn.code.sf.net/p/cmusphinx/code/trunk/cmudict $cmudict_dir || exit 1;
  fi
  echo "Removing the pronunciation variant markers ..."
  grep -v ';;;' $cmudict_dir/cmudict.0.7a | \
    perl -ane 'if(!m:^;;;:){ s:(\S+)\(\d+\) :$1 :; print; }' \
    > $cmudict_plain || exit 1;
fi


if [ $stage -le 1 ]; then
  # check if we have Sequitur G2P is installed
  if [ ! -f  "$sequitur" ]; then
    if ! which swig >&/dev/null; then
      echo "Please install 'swig' and then run $KALDI_ROOT/tools/extra/install_sequitur.sh"
      exit 1
    else
      echo "Sequitur G2P not found- running $KALDI_ROOT/tools/extra/install_sequitur.sh"
      pushd $KALDI_ROOT/tools
      extras/install_sequitur.sh || exit 1
      popd
    fi
  fi
  [[ -f "$sequitur" ]] || { echo "Still can't find Sequitur G2P- check your path.sh"; exit 1; }

  g2p_dir=$dst_dir/g2p
  auto_vocab_prefix_our="$g2p_dir/vocab_autogen_our"
  auto_lexicon_prefix_our="$g2p_dir/lexicon_autogen_our"
   # Create array of cmu_dict and check the vocab's words !not in the array 
  mkdir -p $g2p_dir/log
  mkdir -p ./inspect
  if [ ! $nj -eq 1 ];then
      auto_vocab_splits_our=$(eval "echo $auto_vocab_prefix_our.{$(seq -s',' $nj | sed 's/,$//')}") #Create the list of files to split  
  else
      sudo rm -rf $auto_vocab_splits_our
      sudo rm -rf $g2p_dir/vocab_autogen.full
      auto_vocab_splits_our="$g2p_dir/vocab_autogen_our.1" #If nj is 1, rename the file

  fi
  awk 'NR==FNR{a[$1] = 1; next} !($1 in a)' $cmudict_plain $vocab  |\
    sort | tee $g2p_dir/vocab_autogen_our.full |\
    utils/split_scp.pl /dev/stdin $auto_vocab_splits_our || exit 1
  
  #echo "Splits"
  #cat $g2p_dir/vocab_autogen_full >./vocab_autogen_full
  echo "Autogenerating pronunciations for the words in $auto_vocab_prefix_our.* ..."
  $cmd JOB=1:$nj $g2p_dir/log/g2p.JOB.log \
    local/g2p.sh  $auto_vocab_prefix_our.JOB $g2p_model_dir $auto_lexicon_prefix_our.JOB || exit 1

  cat $auto_vocab_prefix_our.1 >./inspect/auto_vocab_prefix_our.1
  
  g2p_vocab_size=$(wc -l <$g2p_dir/vocab_autogen_our.full)
  #echo $g2p_vocab_size
  cat $g2p_dir/vocab_autogen_our.full >./inspect/vocab_autogen_our.full
  cat $auto_lexicon_prefix_our.1 > ./inspect/auto_lexicon_prefix_our.1
  g2p_lex_size=$(wc -l < <(cat $auto_lexicon_prefix_our.*))
  #echo $g2p_lex_size
  [[ "$g2p_vocab_size" -eq "$g2p_lex_size" ]] || { echo "Unexpected G2P error";
  #sudo rm -f $g2p_dir/vocab_autogen_our.1       # Delete at next run to clear up issues with remaining files
  #sudo rm -f $g2p_dir/"vocab_autogen_our.full"      
  #sudo rm -f $g2p_dir/lexicon_autogen_our.*
   exit 1; }#sudo rm -f $g2p_dir/"vocab_autogen_our.1";  }
  sort <(cat $auto_vocab_prefix_our.*) >$dst_dir/vocab_autogen_our.txt
  sort <(cat $auto_lexicon_prefix_our.*) >$dst_dir/lexicon_autogen_our.txt
  echo "$(wc -l <$g2p_dir/vocab_autogen_our.full) pronunciations autogenerated OK"
  sudo rm -f $g2p_dir/"vocab_autogen_our.{1}"
  sudo rm -f $g2p_dir/vocab_autogen_our.1
  sudo rm -f $g2p_dir/"vocab_autogen_our.full"
  sudo rm -f $g2p_dir/lexicon_autogen_our.*
fi

#exit 1    # EXIT AFTER STAGE 1

if [ $stage -le 2 ]; then
  echo "Combining the CMUdict pronunciations with the autogenerated ones ..."
  awk 'NR==FNR{a[$1]=1; next} ($1 in a)' $vocab $cmudict_plain |\
    cat - $dst_dir/lexicon_autogen_our.txt | sort >$lexicon_raw_nosil_our || exit 1
  cat $lexicon_raw_nosil_our | awk '{print $1}' | sort -u >lexi
  #diff  -y lexi $vocab
  raw_lex_size=$(cat $lexicon_raw_nosil_our | awk '{print $1}' | sort -u | wc -l)
  vocab_size=$(wc -l <$vocab)
  [[ "$vocab_size" -eq "$raw_lex_size" ]] || {
    echo "Inconsistent lexicon($raw_lex_size) vs vocabulary($vocab_size) size!";
    exit 1; }
  echo "Combined lexicon saved to '$lexicon_raw_nosil_our'"
fi

# The copy operation below is necessary, if we skip the g2p stages(e.g. using --stage 3)
#if [[ ! -s "$lexicon_raw_nosil" ]]; then
#  cp $lm_dir/librispeech-lexicon.txt $lexicon_raw_nosil || exit 1
#fi


#if [ $stage -le 3]; then
#  (echo '!SIL SIL'; echo '<SPOKEN_NOISE> SPN'; echo '<UNK> SPN'; ) |\
#  cat - $lexicon_raw_nosil_our | sort | uniq >$dst_dir/lexicon_new.txt
#  echo "Lexicon text file saved as: $dst_dir/lexicon_new.txt"
#fi

exit 0
